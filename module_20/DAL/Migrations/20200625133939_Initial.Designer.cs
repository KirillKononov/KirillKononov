// <auto-generated />
using System;
using DAL.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DAL.Migrations
{
    [DbContext(typeof(DataBaseContext))]
    [Migration("20200625133939_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.3")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DAL.Entities.Homework", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<bool>("HomeworkPresence")
                        .HasColumnType("bit");

                    b.Property<int?>("LectureId")
                        .HasColumnType("int");

                    b.Property<int>("Mark")
                        .HasColumnType("int");

                    b.Property<int?>("StudentId")
                        .HasColumnType("int");

                    b.Property<bool>("StudentPresence")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("LectureId");

                    b.HasIndex("StudentId");

                    b.ToTable("Homework");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2019, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = true,
                            LectureId = 1,
                            Mark = 5,
                            StudentId = 1,
                            StudentPresence = true
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2019, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = false,
                            LectureId = 1,
                            Mark = 0,
                            StudentId = 2,
                            StudentPresence = false
                        },
                        new
                        {
                            Id = 3,
                            Date = new DateTime(2019, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = true,
                            LectureId = 1,
                            Mark = 4,
                            StudentId = 3,
                            StudentPresence = true
                        },
                        new
                        {
                            Id = 4,
                            Date = new DateTime(2019, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = true,
                            LectureId = 1,
                            Mark = 5,
                            StudentId = 4,
                            StudentPresence = true
                        },
                        new
                        {
                            Id = 5,
                            Date = new DateTime(2019, 12, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = true,
                            LectureId = 1,
                            Mark = 5,
                            StudentId = 5,
                            StudentPresence = true
                        },
                        new
                        {
                            Id = 6,
                            Date = new DateTime(2019, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = true,
                            LectureId = 2,
                            Mark = 5,
                            StudentId = 1,
                            StudentPresence = true
                        },
                        new
                        {
                            Id = 7,
                            Date = new DateTime(2019, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = false,
                            LectureId = 2,
                            Mark = 0,
                            StudentId = 2,
                            StudentPresence = false
                        },
                        new
                        {
                            Id = 8,
                            Date = new DateTime(2019, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = true,
                            LectureId = 2,
                            Mark = 4,
                            StudentId = 3,
                            StudentPresence = true
                        },
                        new
                        {
                            Id = 9,
                            Date = new DateTime(2019, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = false,
                            LectureId = 2,
                            Mark = 0,
                            StudentId = 4,
                            StudentPresence = false
                        },
                        new
                        {
                            Id = 10,
                            Date = new DateTime(2019, 12, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = true,
                            LectureId = 2,
                            Mark = 5,
                            StudentId = 5,
                            StudentPresence = true
                        },
                        new
                        {
                            Id = 11,
                            Date = new DateTime(2019, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = true,
                            LectureId = 3,
                            Mark = 4,
                            StudentId = 1,
                            StudentPresence = true
                        },
                        new
                        {
                            Id = 12,
                            Date = new DateTime(2019, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = false,
                            LectureId = 3,
                            Mark = 0,
                            StudentId = 2,
                            StudentPresence = false
                        },
                        new
                        {
                            Id = 13,
                            Date = new DateTime(2019, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = true,
                            LectureId = 3,
                            Mark = 4,
                            StudentId = 3,
                            StudentPresence = true
                        },
                        new
                        {
                            Id = 14,
                            Date = new DateTime(2019, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = false,
                            LectureId = 3,
                            Mark = 0,
                            StudentId = 4,
                            StudentPresence = false
                        },
                        new
                        {
                            Id = 15,
                            Date = new DateTime(2019, 12, 6, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            HomeworkPresence = true,
                            LectureId = 3,
                            Mark = 1,
                            StudentId = 5,
                            StudentPresence = true
                        });
                });

            modelBuilder.Entity("DAL.Entities.Lecture", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int?>("ProfessorId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Lectures");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Robotics",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 2,
                            Name = "Mechatronics",
                            ProfessorId = 1
                        },
                        new
                        {
                            Id = 3,
                            Name = "Physics",
                            ProfessorId = 3
                        });
                });

            modelBuilder.Entity("DAL.Entities.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Professors");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FirstName = "Mihail",
                            LastName = "Sulimov"
                        },
                        new
                        {
                            Id = 2,
                            FirstName = "Ludmila",
                            LastName = "Kozlova"
                        },
                        new
                        {
                            Id = 3,
                            FirstName = "Denis",
                            LastName = "Filatov"
                        });
                });

            modelBuilder.Entity("DAL.Entities.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<float>("AverageMark")
                        .HasColumnType("real");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<int>("MissedLectures")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Students");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AverageMark = 4.67f,
                            FirstName = "Kirill",
                            LastName = "Kononov",
                            MissedLectures = 0
                        },
                        new
                        {
                            Id = 2,
                            AverageMark = 0f,
                            FirstName = "Ivan",
                            LastName = "Ivanov",
                            MissedLectures = 3
                        },
                        new
                        {
                            Id = 3,
                            AverageMark = 4f,
                            FirstName = "Semen",
                            LastName = "Petrov",
                            MissedLectures = 0
                        },
                        new
                        {
                            Id = 4,
                            AverageMark = 1.67f,
                            FirstName = "Dennis",
                            LastName = "Gavrilov",
                            MissedLectures = 2
                        },
                        new
                        {
                            Id = 5,
                            AverageMark = 3.67f,
                            FirstName = "Anton",
                            LastName = "Antipov",
                            MissedLectures = 0
                        });
                });

            modelBuilder.Entity("DAL.Entities.Homework", b =>
                {
                    b.HasOne("DAL.Entities.Lecture", "Lecture")
                        .WithMany("LectureHomework")
                        .HasForeignKey("LectureId");

                    b.HasOne("DAL.Entities.Student", "Student")
                        .WithMany("StudentHomework")
                        .HasForeignKey("StudentId");
                });

            modelBuilder.Entity("DAL.Entities.Lecture", b =>
                {
                    b.HasOne("DAL.Entities.Professor", "Professor")
                        .WithMany("Lectures")
                        .HasForeignKey("ProfessorId");
                });
#pragma warning restore 612, 618
        }
    }
}
